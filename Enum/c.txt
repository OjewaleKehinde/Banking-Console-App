using System;
using System.Collections.Generic;
using BankingConsoleApp.Enum;
using BankingConsoleApp.Models;

namespace BankingConsoleApp
{
    class Program
    {
        internal static List<Customer> customers = new List<Customer>();

        internal static Dictionary<int, Customer> customer
        internal static int customerId = 0;
        internal static int accountNumberSeed = 1234567890;

        static void Main(string[] args)
        {
            Console.WriteLine("===>Welcome to Wellahealth bank!!");
            Console.WriteLine("===>How can we help you?");
            
            while (true)
            {
                Console.WriteLine("===>Pick 1 to create an account");
                Console.WriteLine("===>Pick 2 to close an account");
                Console.WriteLine("===>Pick 3 to check balance");
                Console.WriteLine("===>Pick 4 to credit your account");
                Console.WriteLine("===>Pick 5 to debit your account");
                Console.WriteLine("===>Pick 6 to close");

                try
                {
                    int response = int.Parse(Console.ReadLine());

                    if (response == 1)
                    {
                        Console.Write("What is your name: ");
                        var nameFromUser = Console.ReadLine();
                        Console.Write("What is your address: ");
                        var addressFromUser = Console.ReadLine();
                        Console.Write("How much deposit do you want to start with: ");
                        var depositFromUser = decimal.Parse(Console.ReadLine());

                        Console.WriteLine("===>Creating account...");
                        CreateAccount(nameFromUser,addressFromUser,depositFromUser);
                        Console.WriteLine("===>Account Created successfully...");
                        Console.WriteLine("===>Your account number is: " + accountNumberSeed);
                        continue;
                    } 
                    else if (response == 2)
                    {
                        Console.Write("What is your account Number: ");
                        var accountNumberFromUser = int.Parse(Console.ReadLine());
                        Console.Write("Are you sure you wish to close this account? yes or no ");
                        var areYouSure = Console.ReadLine().ToLower();
                        if (areYouSure == "yes")
                        {
                            CloseAccount(accountNumberFromUser);
                        }
                        continue;
                    } 
                    else if (response == 3)
                    {
                        Console.Write("What is your account Number: ");
                        var accountNumberFromUser = int.Parse(Console.ReadLine());
                        var balance = CheckBalance(accountNumberFromUser);
                        if (balance == null)
                        {
                            Console.Write("Account does not exist");
                        }
                        else
                        {
                            Console.WriteLine("===>Checking balance...");
                            Console.WriteLine("===>Your balance is: " + balance);
                        }
                        
                        continue;
                    }
                    else if (response == 4)
                    {
                        Console.Write("===>Please input your account number: ");
                        var accountNumber = int.Parse(Console.ReadLine());
                        Console.Write("===>Please input the amount to be credited to your account: ");
                        decimal creditAmount = decimal.Parse(Console.ReadLine());
                        CreditAccount();

                        continue;
                    }
                    else if (response == 5)
                    {
                        
                        Console.Write("===>Please input the your account number: ");
                        var accountNumber = int.Parse(Console.ReadLine());
                        Console.Write("===>Please input the account number of the recipient: ");
                        int recipientAccountNumber = int.Parse(Console.ReadLine());
                        Console.Write("===>Please input the amount the amount you would like to send: ");
                        decimal debitAmount = decimal.Parse(Console.ReadLine());
                        DebitAccount();
                        continue;
                    }
                    else if (response == 6)
                    {
                        Console.WriteLine("===>Thank you for banking with us");
                        break;
                    }
                    else
                    {
                        Console.WriteLine("===>Wrong number inputed");
                        continue;
                    }
                }
                catch (System.Exception ex)
                {
                     // TODO
                    Console.WriteLine("===>Please check value. Message: " + ex.Message);
                    continue;
                }
            }
        }
    
        #region Create Account
        static void CreateAccount(string name, string address, decimal amount)
        {
            customerId += 1;
            accountNumberSeed +=1;

            Console.WriteLine("===>Mapping Customer");
            Customer customer = new Customer();
            customer.Id = customerId;
            customer.Name = name;
            customer.Address = address;

            Console.WriteLine("===>Mapping Account Details");
            AccountDetails accountDetails = new AccountDetails();
            accountDetails.AccountNumber = accountNumberSeed;
            accountDetails.Balance = amount;
            accountDetails.AccountStatus = AccountStatus.Active;
            customer.AccountDetails = accountDetails;

            Console.WriteLine("===>Mapping Transactions");
            Transactions transaction = new Transactions();
            transaction.Amount = amount;
            transaction.TransactionType = TransactionType.Credit;
            transaction.DateOfTransaction = DateTime.UtcNow;

            Console.WriteLine("===>Adding Transactions");
            customer.AccountDetails.Transactions.Add(transaction);
            Console.WriteLine("===>Adding to customer");
            customers.Add(customer);
        }
        #endregion
    
        #region Close Account
        static void CloseAccount(int accountNumber)
        {
            foreach (var customer in customers)
            {
                if (customer.AccountDetails.AccountNumber == accountNumber)
                {
                    Console.WriteLine("===>Account found");
                    customer.AccountDetails.AccountStatus = AccountStatus.Disabled;
                    Console.WriteLine($"Account of: {accountNumber} disabled");
                    return;
                }
            }
            Console.WriteLine("===>Account not found");
            return;
        }
        #endregion
    
        #region Check Balance
        static decimal? CheckBalance(int accountNumber)
        {
            foreach (var customer in customers)
            {
                if (customer.AccountDetails.AccountNumber == accountNumber)
                {
                    Console.WriteLine("===>Account found");
                    return customer.AccountDetails.Balance;
                }
            }
            Console.WriteLine("===>Account not found");
            return null;
        }
        #endregion

        #region credit account

        static void CreditAccount(decimal creditAmount, int accountNumber)
        {
           foreach (var customer in customers)
           {
              if (customer.AccountDetails.AccountNumber == accountNumber)
              {
                    Console.WriteLine($"===>Your account with account number {accountNumber} will be credited with {creditAmount} naira. Type yes to confirm the transaction or no to cancel.");
                    var userInput = Console.ReadLine().ToLower();
                    if(userInput=="yes"){

                    }
                    else{
                        Console.WriteLine("Transaction cancelled");
                        return;

                    }

              }
              else
              {
                  Console.WriteLine("The account number you have inputed is incorrect. Please try again.");
                  return;
              }

    
           }

            

        }

        #endregion

        #region Debit account

        static void DebitAccount(decimal debitAmount, int recipientAccountNumber, int senderAccountNumber){


            List<int> accountNumbers = new List<int>();
            
            foreach (var customer in customers)
            {
                accountNumbers.Add(customer.AccountDetails.AccountNumber);


            }
            foreach (var customer in customers)
            {
                if (customer.AccountDetails.AccountNumber == senderAccountNumber)
                {

                }

            }
          
            
            if (accountNumbers.Contains(recipientAccountNumber) && accountNumbers.Contains(senderAccountNumber))
            {
                Console.WriteLine($"===>The sum of {debitAmount} naira will be sent to the following account {recipientAccountNumber}. Type yes to confirm the transaction or no to cancel.");
                var userInput = Console.ReadLine().ToLower();
                if(userInput=="yes")
                {
                    return;

                }
                else
                {
                    Console.WriteLine("Transaction cancelled");
                    return;

                }

            }
            else if (!accountNumbers.Contains(recipientAccountNumber)) 
            {
                Console.WriteLine("Please check your account number and try again");
            }
            else
            {
                Console.WriteLine("Please check the recipient's account number and try again");
            }

        }

        #endregion
    }
}
